/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ants;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.function.Function;
import java.util.function.Supplier;

import static org.mockito.Mockito.*;

class AppShould {


  private Ant ant;
  private Function<Integer, Ant> antFunction;

  private Grid grid;
  private Function<Integer, Grid> gridFunction;

  private Printer printer;
  private Supplier<Printer> printerFunction;

  @BeforeEach
  void setUp() {
    ant = mock(Ant.class);
    antFunction = (position) -> ant;

    grid = mock(Grid.class);
    gridFunction = (dimension) -> grid;

    printer = mock(Printer.class);
    printerFunction = () -> printer;
  }


  @Test
  void call_printer_when_print() {
    int aDimension = 5;
    var app = initApp(aDimension);

    app.print();

    verify(printer).print(grid, ant);
  }


  private App initApp(int gridDimension) {
    var app = new App(gridDimension, antFunction, gridFunction, printerFunction);
    return app;
  }


  @Test
  void ant_turn_right_when_blank_grid() {
    when(grid.getColorAt(1, 1)).thenReturn("B");

    App app = initApp(3);


    app.move();

    verify(ant).moveRight();
  }

  @Test
  void ant_turn_left_when_black_grid() {
    when(grid.getColorAt(1, 1)).thenReturn("N");

    App app = initApp(3);


    app.move();

    verify(ant).moveLeft();
  }

  @Test
  void ant_shouldBe_initialized_in_the_middle_of_the_grid() {
    int gridDimension = 3;
    Function<Integer, Ant> mockAntFunction = mock(Function.class);

    new App(gridDimension, mockAntFunction, gridFunction, printerFunction);

    int middleGridPosition = gridDimension / 2;
    verify(mockAntFunction).apply(middleGridPosition);
  }


}
